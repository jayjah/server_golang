version: '3.9'
services:
  app:
    container_name: server
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - TEST_DB_USER=${TEST_DB_USER}
      - TEST_DB_PASSWORD=${TEST_DB_PASSWORD}
      - TEST_DB_NAME=${TEST_DB_NAME}
      - TEST_DB_HOST=${TEST_DB_HOST}
      - TEST_DB_PORT=${TEST_DB_PORT}
      - PORT=${PORT}
    tty: true
    build: .
    ports:
      - ${PORT}:${PORT}
    restart: on-failure
    volumes:
      - .:/app
      - ./public:/public
    depends_on:
      - postgresdb
    networks:
      - internal
    user: ${UID}:${GID}

  postgresdb:
    image: postgres:latest
    container_name: postgres_container
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DATABASE_HOST=${DB_HOST}
    ports:
      - ${DB_PORT}:5432
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    networks:
      - internal

  postgresdb_test:
    image: postgres:latest
    container_name: postgres_test_container
    environment:
      - POSTGRES_USER=${TEST_DB_USER}
      - POSTGRES_PASSWORD=${TEST_DB_PASSWORD}
      - POSTGRES_DB=${TEST_DB_NAME}
      - DATABASE_HOST=${TEST_DB_HOST}
    ports:
      - ${TEST_DB_PORT}:5432
    volumes:
      - ./pg_data_test:/var/lib/postgresql/data
    networks:
      - internal

volumes:
  pg_data:
  pg_data_test:
  public:

# Networks to be created to facilitate communication between containers
networks:
  internal:
    driver: bridge